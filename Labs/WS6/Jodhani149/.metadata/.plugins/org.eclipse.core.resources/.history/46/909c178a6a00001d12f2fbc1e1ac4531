package Task1;
	
import java.io.BufferedReader;
import java.io.FileReader;
import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.layout.GridPane;
import javafx.scene.text.Text;
import javafx.stage.Stage;

public class Main extends Application {

    private TextField tYear = new TextField();
    private TextField tGender = new TextField();
    private TextField tName = new TextField();
    private Text tResult = new Text("");

    @Override
    public void start(Stage pStage) throws Exception {

        /******* Query Pane *******/

        GridPane SGrid = new GridPane();

        Label LYear = new Label("Enter the Year:");
        Label LGender = new Label("Enter the Gender:");
        Label LName = new Label("Enter the Name:");

        Button submitBtn = new Button("Submit Query");
        Button exit = new Button("Exit");

        
        submitBtn.setPrefWidth(90);
        exit.setPrefWidth(90);

        
        SGrid.setPadding(new Insets(25, 25, 25, 25));
        SGrid.setHgap(10);
        SGrid.setVgap(10);

        SGrid.add(LYear, 0, 0);
        SGrid.add(tYear, 1, 0);
        SGrid.add(LGender, 0, 1);
        SGrid.add(tGender, 1, 1);
        SGrid.add(LName, 0, 2);
        SGrid.add(tName, 1, 2);

        SGrid.add(submitBtn, 0, 3);
        SGrid.add(exit, 1, 3);

        pStage.setTitle("Search Name Ranking Application");

        Scene queryScene = new Scene(SGrid, 350, 170);
        pStage.setScene(queryScene);

        pStage.show();

        /*****************************************/

        /******* Result Pane *******/

        GridPane GPresult = new GridPane();

        Text searchAgainPrompt = new Text("Do you want to Search for another Name:");

        Button yesBtn = new Button("Yes");
        Button noBtn = new Button("No");

        yesBtn.setPrefWidth(90);
        noBtn.setPrefWidth(90);

        GPresult.setPadding(new Insets(35, 25, 5, 55));

        GPresult.setHgap(10);
        GPresult.setVgap(10);

        GPresult.add(tResult, 0, 0, 10, 1);
        GPresult.add(searchAgainPrompt, 0, 1, 10, 1);

        GPresult.add(yesBtn, 0, 2);
        GPresult.add(noBtn, 1, 2);

        Stage resultStage = new Stage();

        resultStage.setTitle("Search Name Ranking Application");

        Scene resultScene = new Scene(GPresult, 350, 170);
        resultStage.setScene(resultScene);


        /*****************************************/

        /******* Query Pane Buttons *******/

        submitBtn.setOnAction(e -> {
            results();
            resultStage.show();
        });

        exit.setOnAction(e -> {
            System.exit(0);
        });

        /*****************************************/

        /******* Result Pane Buttons *******/

        yesBtn.setOnAction(e -> {
            resultStage.hide();
        });

        noBtn.setOnAction(e -> {
            System.exit(0);
        });

        /*****************************************/
    }

    private void results() {

        String year = tYear.getText();
        String filename = String.format("babynamesranking%s.txt", year);

        String gender = (tGender.getText().equals("M") ? "Boy" : "Girl");

        String name = tName.getText();
        String foundResult = "Name was not found";

        try (BufferedReader br = new BufferedReader(new FileReader(filename))) 
        {
            String str;
            while ((str = br.readLine()) != null) 
            {
                if (str.contains(name)) {
                    foundResult = str;
                    break;
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        String rank = foundResult.substring(0, 3);
        String result = String.format("%s name %s is ranked #%s in %s year", gender, name, rank, year);

        tResult.setText(result);
    }

    public static void main(String[] args) {
        launch(args);
    }

}